<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="shader_background_vs">
        attribute vec2 aPosition;
        void main() {
            gl_Position = vec4(aPosition, 0.0, 1.0);
        }
    </string>
    <string name="shader_background_fs">
        precision mediump float;
        void main() {
            gl_FragColor = vec4(0.2, 0.6, 0.1, 1.0);
        }
    </string>
    <string name="shader_copy_vs">
        attribute vec2 aPosition;
        varying vec2 vTextureCoord;
        void main() {
            gl_Position = vec4(aPosition, 0.0, 1.0);
            vTextureCoord = (gl_Position.xy + 1.0) * 0.5;
        }
    </string>
    <string name="shader_copy_fs">
        precision mediump float;
        uniform sampler2D sTexture;
        varying vec2 vTextureCoord;
        void main() {
            gl_FragColor = texture2D(sTexture, vTextureCoord);
            
            const float cornerBorderRadius = 1.1;
            float cornerPos = length((vTextureCoord - 0.5) * 2.0);
            if (cornerPos &gt; cornerBorderRadius) {
                const float sqrt2 = 1.4143;
                const float cornerMaxLenInv = 1.0 / (sqrt2 - cornerBorderRadius);
                
                float shade = (cornerPos - cornerBorderRadius) * cornerMaxLenInv;
                shade = floor(shade * 8.0);
                
                float shadeMain = mod(shade, 8.0);
                float shadeBool = mod(shadeMain, 2.0);
                
                if (shadeBool &lt; 0.1) {
                    gl_FragColor.rgb *= 0.2;
                } else {
                    gl_FragColor.rgb *= 1.0 - sqrt(shadeMain * 0.1);
                }
            }
        }
    </string>
</resources>